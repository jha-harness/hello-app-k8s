# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-east4 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: voting-app-demo    # TODO: update to cluster name
  GKE_ZONE: us-east4   # TODO: update to cluster zone
  DEPLOYMENT_NAME: helloweb # TODO: update to deployment name
  REPOSITORY: us-east4-docker.pkg.dev/fluted-elf-432519-t7/voting-app-demo # TODO: update to Artifact Registry docker repository
  IMAGE: voting-app-service

jobs:
  setup-build-publish-deploy-qa:
    name: Deploy to QA
    runs-on: ubuntu-latest
    environment: qa

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

   # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: google-github-actions/auth@v2.1.4
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Docker configuration
      run: |-
        gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    # Get the GKE credentials so we can deploy to the cluster
    
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Build and push to GAR
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: us-east4-docker.pkg.dev/fluted-elf-432519-t7/voting-app-demo/vote-app:${{ github.sha }}

    - name: Scan image
      uses: anchore/scan-action@v3
      with:
        image: "us-east4-docker.pkg.dev/fluted-elf-432519-t7/voting-app-demo/vote-app:${{ github.sha }}"
    
    # # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize
    # # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        #  ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        # ./kustomize edit set image us-east4-docker.pkg.dev/fluted-elf-432519-t7/voting-app-demo/vote-app:${{ github.sha }}
        kubectl apply -f manifests/helloweb-deployment.yaml
        kubectl apply -f manifests/helloweb-service-load-balancer.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

  setup-build-publish-deploy-prod:
    name: Deploy-to-Prod
    runs-on: ubuntu-latest
    needs: [setup-build-publish-deploy-qa]
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

   # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: google-github-actions/auth@v2.1.4
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        #  ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        # ./kustomize edit set image us-east4-docker.pkg.dev/fluted-elf-432519-t7/voting-app-demo/vote-app:${{ github.sha }}
        kubectl apply -f manifests/helloweb-deployment.yaml
        kubectl apply -f manifests/helloweb-service-load-balancer.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
